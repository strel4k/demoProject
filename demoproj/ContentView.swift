//
//  ContentView.swift
//  demoproj
//
//  Created by Alexander on 11.08.2023.
//

import SwiftUI

struct Story: Identifiable {
    let id = UUID()
    let username: String
    let image: String
}

struct ContentView: View {
    let stories: [Story] = [
        Story(username: "–ü—Ä–∏–≤–∏–ª–µ–≥–∏–∏ ¬´–ú–æ–π SPAR¬ª", image: ""),
        Story(username: "–ú—ã –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö", image: ""),
        Story(username: "3 —Ä–µ—Ü–µ–ø—Ç–∞ –∫–æ–∫—Ç–µ–π–ª–µ–π", image: ""),
        Story(username: "–î–µ–≥—É—Å—Ç–∞—Ü–∏–∏ –≤ SPAR", image: ""),
        Story(username: "–ù–æ–≤–∏–Ω–∫–∏ –Ω–µ–¥–µ–ª–∏", image: ""),
    ]
    
    @State private var search = ""
    
    var body: some View {
        TabView {
            NavigationView {
                ScrollView(.vertical, showsIndicators: false) {
                    VStack {
                        HStack {
                            TextField("üìç–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä, –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π", text: $search)
                                .padding(.horizontal)
                                .background(Color.gray.opacity(0.2))
                                .cornerRadius(10)
                                .padding()
                            
                            Button(action: {
                                // –î–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏
                            }) {
                                Image(systemName: "circle.grid.3x3")
                                    .font(.title2)
                                    .foregroundColor(.green)
                            }
                            .padding(.trailing)
                        }
                        //ScrollView —Å—Ç–æ—Ä–∏–∑–æ–≤
                        ScrollView(.horizontal, showsIndicators: false) {
                            HStack(spacing: 20) {
                                ForEach(stories) { story in
                                    StoryView(story: story)
                                }
                            }
                            .padding()
                        }
                        
                        // Scroll View —Å –∞–∫—Ü–∏—è–º–∏
                        ScrollView(.horizontal, showsIndicators: false) {
                            HStack(spacing: 10) {
                                ForEach(1...5, id: \.self) { index in
                                    Rectangle()
                                        .fill(Color.gray)
                                        .frame(width: 340, height: 180)
                                        .cornerRadius(20)
                                    
                                }
                            }
                            .padding(.bottom, 10)
                        }
                        
                        // –ë–æ–Ω—É—Å–Ω–∞—è –∫–∞—Ä—Ç–∞
                        Rectangle()
                            .fill(Color.green)
                            .frame(width: .infinity, height: 150)
                            .cornerRadius(20)
                            .padding(.bottom, 10)
                        
                        //Scroll view —Å –±—ã—Å—Ç—Ä—ã–º –º–µ–Ω—é
                        ScrollView(.horizontal, showsIndicators: false) {
                            HStack(spacing: 10) {
                                ForEach(1...5, id: \.self) { index in
                                    Rectangle()
                                        .fill(Color.blue)
                                        .frame(width: 106, height: 140)
                                        .cornerRadius(20)
                                        .shadow(color: .gray, radius: 3)
                                    
                                }
                            }
                        }
                        
                        // –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ç–æ–≤–∞—Ä
                        Text("–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º")
                            .font(.title2)
                            .bold()
                            .frame(maxWidth: .infinity, alignment: .leading)
                        
                        ScrollView(.horizontal, showsIndicators: false) {
                            HStack(spacing: 10) {
                                ForEach(1...5, id: \.self) { index in
                                    Rectangle()
                                        .fill(Color.red)
                                        .frame(width: 150, height: 170)
                                        .cornerRadius(20)
                                        .shadow(color: .gray, radius: 3)
                                    
                                }
                            }
                        }
                        
                        // –°–ª–∞–¥–∫–∏–π —Ç–æ–≤–∞—Ä
                        
                        Text("–°–ª–∞–¥–∫–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ")
                            .font(.title2)
                            .bold()
                            .frame(maxWidth: .infinity, alignment: .leading)
                        
                        // –¢–æ–≤–∞—Ä
                        ScrollView(.horizontal, showsIndicators: false) {
                            HStack(spacing: 10) {
                                ForEach(1...5, id: \.self) { index in
                                    ZStack {
                                        Rectangle()
                                            .fill(Color.orange)
                                            .frame(width: 150, height: 170)
                                            .cornerRadius(20)
                                            .shadow(color: .gray, radius: 3)
                                        Text("99 —Ä/—à—Ç")
                                            .font(.headline)
                                            .padding(.vertical, 4)
                                        HStack {
                                           Spacer()
                                            Image(systemName: "basket.fill")
                                                .font(.title)
                                                .foregroundColor(.green)
                                        }
                                    }
                                }
                            }
                        }
                        
                    }
                    .padding(.horizontal, 5) // nav bar
                }
            }
            // Tabbar
            .tabItem {
                Image(systemName: "arrow.up.circle")
                Text("–ì–ª–∞–≤–Ω–∞—è")
            }
            
            Text("–ö–∞—Ç–∞–ª–æ–≥")
                .tabItem {
                    Image(systemName: "menucard")
                    Text("–ö–∞—Ç–∞–ª–æ–≥")
                }
            
            Text("–ö–æ—Ä–∑–∏–Ω–∞")
                .tabItem {
                    Image(systemName: "cart")
                    Text("–ö–æ—Ä–∑–∏–Ω–∞")
                }
            
            Text("–ü—Ä–æ—Ñ–∏–ª—å")
                .tabItem {
                    Image(systemName: "person.fill")
                    Text("–ü—Ä–æ—Ñ–∏–ª—å")
                }
        }
        .accentColor(.green)
    }
}

struct StoryView: View {
    let story: Story
    
    var body: some View {
        VStack {
            Image(story.image)
                .resizable()
                .aspectRatio(contentMode: .fill)
                .frame(width: 70, height: 70)
                .clipShape(Circle())
                .overlay(
                    Circle().stroke(Color.green, lineWidth: 2)
                )
            Text(story.username)
                .font(.caption)
                .lineLimit(2)
                .frame(width: 75)
                .multilineTextAlignment(.center)
            
        }
    }
}

struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}

